<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:ivy="antlib:org.apache.ivy.ant" name="giscore" default="compile">

	<!-- Remove and reinstate ivy:buildnumber should that ever start working again -->
	<property name="ivy.new.revision" value="0.5.3" />
	
	<property name="proxy.host" value="gatekeeper.mitre.org" />
	<property name="proxy.port" value="80" />
	<property name="proxy.user" value="" />
	<property name="proxy.pass" value="" />
	<property name="proxy.nonProxyHosts" value="*.mitre.org|localhost|127.0.0.1" />

	<property name="basedir" value="."/>
	<property name="src" value="${basedir}/src" />
	<property name="test" value="${basedir}/test" />
	<property name="lib" value="${basedir}/lib" />
	<property name="rel" value="${basedir}/rel" />
	<property name="build" value="${basedir}/build" />
	<property name="build.classes" value="${build}/classes" />
	<property name="test.classes" value="${build}/test" />
	<property name="testoutput" value="${basedir}/testOutput" />

	<path id="project.classpath">
		<fileset dir="lib">
			<include name="**/*.jar" />
			<exclude name="**/*-sources.jar" />
			<exclude name="**/*-javadoc.jar" />
		</fileset>
	</path>

	<target name="init" unless="ivy.default.ivy.user.dir">
		<mkdir dir="${rel}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${rel}/jars" />
		<dependset>
			<srcfilelist dir="${basedir}" files="ivy.xml,ivy.settings" />
			<targetfileset dir="${lib}" />
		</dependset>
		<mkdir dir="${lib}" />
		<property name="ivy.default.ivy.user.dir" value="${user.home}/.ivy2" />
		<ivy:configure file="${basedir}/ivysettings.xml" />
		<ivy:resolve file="${basedir}/ivy.xml" />
	</target>

	<target name="init.proxy">
		<setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}" proxyuser="${proxy.user}" proxypassword="${proxy.pass}" nonproxyhosts="${proxy.nonProxyHosts}" />
	</target>

	<target name="clean">
		<delete dir="${lib}" />
		<delete dir="${rel}" />
		<delete dir="${build}" />
		<delete dir="${testoutput}" />
	</target>

	<!-- ================================= 
          target: clean-cache              
         ================================= -->
	<target name="clean-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>

	<target name="resolve" depends="init,init.proxy" description="retrieve dependencies with ivy">
		<mkdir dir="${lib}" />
		<property name="ivy.retrieve.pattern" value="lib(/[organization])(/[module])/[artifact]-[revision](-[type]).[ext]" />
		<ivy:retrieve />
	</target>

	<target name="generate-eclipse-classpath.real" depends="resolve">
		<property name="eclipse.gen.prefix" value='    &lt;classpathentry kind="lib" path="' />
		<property name="eclipse.gen.suffix" value='"/&gt;' />
		<pathconvert pathsep="${eclipse.gen.suffix}${line.separator}${eclipse.gen.prefix}" property="eclipse-classpath" refid="project.classpath" />

		<dependset>
			<srcfilelist dir="${basedir}" files="build.xml .classpath.src" />
			<srcfileset dir="${basedir}">
				<include name="ivy*.xml" />
			</srcfileset>
			<targetfilelist dir="${basedir}" files=".classpath" />
		</dependset>

		<copy file=".classpath.src" tofile=".classpath" overwrite="false">
			<filterchain>
				<replacetokens>
					<token key="ANT_CLASSPATH" value="${eclipse.gen.prefix}${eclipse-classpath}${eclipse.gen.suffix}" />
				</replacetokens>

				<tokenfilter>
					<replacestring from="${basedir}" to="" />
					<replacestring from="\" to="/" />
					<replacestring from="/lib" to="lib" />
				</tokenfilter>
			</filterchain>
		</copy>
	</target>

	<target name="generate-eclipse-classpath.clean">
		<delete file=".classpath" quiet="true" />
	</target>

	<target name="generate-eclipse-classpath" depends="generate-eclipse-classpath.clean, generate-eclipse-classpath.real" description="Generate the Eclipse classpath." />

	<target name="compile" depends="resolve">
		<javac source="1.5" target="1.5" classpathref="project.classpath" srcdir="${src}"
			destdir="${build.classes}"
			debug="true"/>
	</target>

	<target name="compileTests" depends="compile">
		<mkdir dir="${test.classes}" />
		<javac source="1.5" target="1.5" srcdir="${basedir}/test"
			debug="true"
			includeantruntime="false"
			destdir="${test.classes}">
			<classpath>
				<pathelement path="${build.classes}" />
				<path refid="project.classpath" />
			</classpath>
		</javac>
	</target>

	
	
	<target name="jar" depends="compile">
		<ivy:cachepath pathid="kf.path" organisation="org.knopflerfish" 
			module="knopflerfish-ant" revision="2.1.0-mitre-8" 
			conf="default" inline="true"/>

		<!-- buildnumber isn't working correctly with artifactory -->
		<!-- <ivy:buildnumber revision="0.4" organisation="org.mitre.itf" module="giscore" resolver="maven-proxy-local" /> -->		
		<taskdef resource="org/knopflerfish/ant/antlib.xml" classpathref="kf.path"/>
		<!-- This isn't perfect because the com.esri.arcgis classes haven't
		     been bundled. However all of the native code makes bundling them
		     tricky, we'll get to that later. -->
		<delete file="${rel}/jars/giscore.jar"/>
		<bundle file="${rel}/jars/giscore.jar"
		        update="false"
		        bundlename="ITF Giscore"
		        bundledescription="GIS data interchange core library"
		        bundlesymbolicname="org.mitre.giscore"
		        bundleVersion="${ivy.new.revision}"
		        activator="none"
		        standardJVMPackages="1.5"
		        bundleVendor="The MITRE Corp."
		        contactAddress="202 Burlington Road, Bedford, MA 01730-1420"
		        autoGenerateUses="true">
			<importClasspath>
				<path refid="project.classpath"/>
			</importClasspath>

			<fileset dir="${build.classes}" />
			<autoimportpackage prefix="javax.xml.stream"/>
			<!-- The SimpleObjectInputStream may require this to read in class
			     references from other bundles. -->
			<dynamicImportPackage name="*"/>
			<autoexportpackage prefix="org.mitre.giscore" version="${ivy.new.revision}"/>
		</bundle>
		<!--zip destfile="${rel}/jars/giscore.jar" filesonly="true" update="true">
			<zipfileset dir="resources" includes="license.txt" prefix="META-INF" />
		</zip-->
	</target>

	<target name="test" depends="compileTests" description="Run JUnit tests">
		<mkdir dir="${testoutput}" />
		<junit printsummary="yes" haltonfailure="no" maxmemory="512m" fork="yes">
			<classpath>
				<pathelement path="${build.classes}" />
				<pathelement path="${test.classes}" />
				<path refid="project.classpath" />
			</classpath>
			<formatter type="plain" />

			<batchtest fork="yes" todir="${testoutput}">
				<fileset dir="${test}">
					<exclude name="**/TestGISBase.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="pom" depends="jar">
		<ivy:resolve revision="${ivy.new.revision}" file="${basedir}/ivy.xml" 
			resolveid="ivyres" />
		<ivy:deliver revision="${ivy.new.revision}" resolveid="ivyres" 
			deliverpattern="${rel}/ivy.xml" />
		<ivy:makepom ivyfile="${basedir}/rel/ivy.xml" pomfile="${rel}/giscore.pom" 
			settingsref="ivy.instance">
			<mapping conf="compile" scope="compile" />
			<mapping conf="runtime" scope="runtime" />
			<mapping conf="test" scope="test" />
		</ivy:makepom>
	</target>

	<target name="publish-local" depends="pom, javadoc, sourcejar" 
		description="Copy the Jar and Ivy file to the local cache.">
		<!-- A better default? <ivy:deliver deliverpattern="${dist}/[type]s/[artifact]-[revision](-[classifier]).[ext]"/> -->
		<echo>Publishing revision ${ivy.new.revision}</echo>
		<ivy:publish resolver="libraries" update="true" revision="${ivy.new.revision}" overwrite="true">
			<artifacts pattern="rel/[artifact].[ext]" />
			<artifacts pattern="rel/jars/[artifact].[ext]" />
		</ivy:publish>
	</target>

	<target name="publish" depends="pom, javadoc, sourcejar" 
		description="Publish directly to a repository">		
		<echo>Publishing revision ${ivy.new.revision}</echo>
		<ivy:publish resolver="maven-proxy-local" revision="${ivy.new.revision}" conf="compile" overwrite="true">
			<artifacts pattern="rel/[artifact].[ext]" />
			<artifacts pattern="rel/jars/[artifact].[ext]" />
		</ivy:publish>
		<ivy:publish resolver="maven-proxy-local-extra" revision="${ivy.new.revision}" conf="pubextra" publishivy="false" overwrite="true">
			<artifacts pattern="rel/[artifact]-[type].[ext]" />
		</ivy:publish>	
	</target>
	
	<target name="sourcejar">
		<jar destfile="${rel}/giscore-sources.jar">
			<fileset dir="${src}" />
		</jar>
	</target>

	<target name="javadoc" depends="resolve">
		<mkdir dir="${rel}/docs" />
		<javadoc packagenames='org.mitre.giscore.*'
	         additionalparam="-breakiterator"
	         sourcepath="${src}" destdir='${rel}/docs'
	         overview="${src}/javadocOverview.html"
	         author='false'
		 public='true'
		 classpathref="project.classpath"
	         windowtitle='GIScore Package' doctitle='GIScore'
	         locale='en_US'>
		 <bottom><![CDATA[<i>Copyright &#169; 2009 MITRE Corp. All Rights Reserved.</i>]]></bottom>
		</javadoc>
		<jar destfile="${rel}/giscore-javadoc.jar">
			<fileset dir="${rel}/docs" />
		</jar>
	</target>



</project>
